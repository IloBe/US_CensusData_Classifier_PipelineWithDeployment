# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest # Which OS this runs on
    strategy:
      matrix:
        python-version: ["3.10.9"] # You can build against multiple Python versions

    steps:
    - uses: actions/checkout@v3
    - name: Listing contents after checkout
        run: |
          ls
    - name: Set up Python ${{ matrix.python-version }} # Name of an action that sets up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Upgrade pip to the latest version
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: DVC install      # see: https://github.com/iterative/setup-dvc
      uses: iterative/setup-dvc@v1
    - name: Test with pytest 
      run: |
         # Final action: runs pytest for all tests in the ./tests dir
         pytest ./tests -vv
